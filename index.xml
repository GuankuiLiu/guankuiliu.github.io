<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>About on Guankui Liu | Boylad</title>
    <link>/</link>
    <description>Recent content in About on Guankui Liu | Boylad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用OpenCV和Python处理数据</title>
      <link>/cn/post/20200604/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/20200604/</guid>
      <description>理解机器学习流程 加速健壮特征（Speeded Up Robust Features, SURF） 方向梯度直方图（Histogram of Oriented Gradients, HOG） 尺度不变特征变换（scale-i</description>
    </item>
    
    <item>
      <title>TensorFlow创建特征列</title>
      <link>/cn/post/tf_feature_column/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/tf_feature_column/</guid>
      <description>import numpy as np import pandas as pd import tensorflow as tf from tensorflow import feature_column from tensorflow.keras import layers from sklearn.model_selection import train_test_split 使用Pandas创建数据帧 URL = &amp;#39;https://storage.googleapis.com/applied-dl/heart.csv&amp;#39; dataframe = pd.read_csv(URL) dataframe.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } age sex cp</description>
    </item>
    
    <item>
      <title>Matplotlib作图</title>
      <link>/cn/post/matplotlib_graph-01/</link>
      <pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/matplotlib_graph-01/</guid>
      <description>import numpy as np import matplotlib.pyplot as plt plt.figure(figsize=(5, 3), dpi=80) X = np.linspace(-np.pi, np.pi, 256, endpoint=True) C,S = np.cos(X), np.sin(X) plt.xlim(X.min()*1.2, X.max()*1.1) plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi], [r&amp;#39;$-\pi$&amp;#39;, r&amp;#39;$-\pi/2$&amp;#39;, r&amp;#39;$0$&amp;#39;, r&amp;#39;$\pi/2$&amp;#39;, r&amp;#39;$\pi$&amp;#39;]) plt.ylim(C.min()*1.1, C.max()*1.1) plt.yticks([-1, 0, 1], [r&amp;#39;$-1$&amp;#39;, r&amp;#39;$0$&amp;#39;, r&amp;#39;$+1$&amp;#39;]) plt.plot(X, C, color=&amp;#39;blue&amp;#39;, linewidth=2.5, linestyle=&amp;#39;-&amp;#39;) plt.plot(X, S, color=&amp;#39;red&amp;#39;, linewidth=2.5, linestyle=&amp;#39;-.&amp;#39;) plt.show() plt.figure(figsize=(8, 5), dpi=80) ax = plt.subplot(111) ax.spines[&amp;#39;right&amp;#39;].set_color(&amp;#39;none&amp;#39;) ax.spines[&amp;#39;top&amp;#39;].set_color(&amp;#39;none&amp;#39;) ax.xaxis.set_ticks_position(&amp;#39;bottom&amp;#39;) ax.spines[&amp;#39;bottom&amp;#39;].set_position((&amp;#39;data&amp;#39;, 0)) # 位置：数据空</description>
    </item>
    
    <item>
      <title>线性回归与局部加权线性回归</title>
      <link>/cn/post/20191214_lrlwlr/</link>
      <pubDate>Sat, 14 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/20191214_lrlwlr/</guid>
      <description>线性回归1 如果自变量有p个，线性回归模型的形式为： $$y=\beta_0+\beta_1x_1+\beta_2x_2+\cdots+\beta_px_p+\epsilon$$ 如果有n个样本，则线性模型的样本形式为： $$y_i=\beta_0+\beta_1x_{i1}+\beta_2x_{i2}+\cdots+\beta_px_{ip}+\epsilon_i, \ \ i=1,2,\cdots,n.$$ 如果记 $$\mathbf y=\left[ \begin{array}{ccc} y_1\\ y_2\\ \vdots\\ y_n \end{array} \right]; \ \ \mathbf X=\left[ \begin{array}{ccc} 1 &amp;amp; x_{11}</description>
    </item>
    
    <item>
      <title>100扇门的打开与关闭</title>
      <link>/cn/post/20191207_100_doors_open_close/</link>
      <pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/20191207_100_doors_open_close/</guid>
      <description>有100扇门围成一圈，顺时针标号为$1,2,\cdots,100$，现在要你从1号门开始绕着这些门走100圈并按如下规则操作相关的门，假设起</description>
    </item>
    
    <item>
      <title>Fashion-MNIST CNN分类</title>
      <link>/cn/post/20191206_fashion_mnist/</link>
      <pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/20191206_fashion_mnist/</guid>
      <description>Fashion-MNIST数据集比MNIST的难度更大，更有代表性，且与MNIST的数据结构完全相同，同样是60000+10000张28x2</description>
    </item>
    
    <item>
      <title>Cats v.s. Dogs CNN分类</title>
      <link>/cn/post/20191130_cats_v.s._dogs/</link>
      <pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/20191130_cats_v.s._dogs/</guid>
      <description>用Kaggle竞赛的Dogs vs. Cats原始数据集中包含25000张猫狗图像(各12500张)。下载解压后，创建一个包含三个子集(train、</description>
    </item>
    
    <item>
      <title>神经网络过拟合与正则化</title>
      <link>/cn/post/20191129_overfitting/</link>
      <pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/20191129_overfitting/</guid>
      <description>Deep learning models tend to be good at fitting to the training data, but the real challenge is generalization, not fitting. 这里我们使用IMDB数据集作为测试，介绍一些神经网络中过拟合问题的处理方法。数据预处理部分，参考这</description>
    </item>
    
    <item>
      <title>波士顿房价预测</title>
      <link>/cn/post/20191126boston_preice_regression/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/20191126boston_preice_regression/</guid>
      <description>波士顿房价数据集包含20世纪70年代中期波士顿郊区犯罪率、财产税率等13个feature，target是住房价格的中位数，单位：千美元。其中</description>
    </item>
    
    <item>
      <title>电影评论&amp;新闻主题文本分类</title>
      <link>/cn/post/20191124imdb_mlp/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/20191124imdb_mlp/</guid>
      <description>IMDB电影评论分类(二分类)1 IMDB数据集有50000条highly-polarized（高度极端化的）评论，其中训练集与测试集各有25</description>
    </item>
    
    <item>
      <title>MNIST手写字体分类</title>
      <link>/cn/post/20191117mnist_mlp/</link>
      <pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/20191117mnist_mlp/</guid>
      <description>下面的代码训练了一个多层感知机(Multilayer Perceptron, MLP)，在MNIST1数据集上做手写字体分类。训练集有60000张28x28像素的灰</description>
    </item>
    
    <item>
      <title>For Test</title>
      <link>/en/post/for-test/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/en/post/for-test/</guid>
      <description> What I see in Nature is a magnificient structure that we can comprehend only very imperfectly, and that must fill a thinking person with a feeling of humility.
——Albert Einstein
 </description>
    </item>
    
    <item>
      <title>R数据预处理</title>
      <link>/cn/post/r%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/</link>
      <pubDate>Fri, 14 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/r%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/</guid>
      <description>重命名数据变量 数据框允许用户根据行名和列名选取和过滤数据。由于并不是所有的数据集都包含行名和列名，因此我们需要使用内置的命名函数重命名数据集</description>
    </item>
    
    <item>
      <title>R时间序列ARIMA模型预测</title>
      <link>/cn/post/r%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97arima%E6%A8%A1%E5%9E%8B%E9%A2%84%E6%B5%8B/</link>
      <pubDate>Sat, 08 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/r%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97arima%E6%A8%A1%E5%9E%8B%E9%A2%84%E6%B5%8B/</guid>
      <description>通过差分得到平稳时间序列 每年女子裙子边缘的直径做成的时间序列数据从1866-1911年在平均值上是不平稳的。随着时间增加，数值变化很大。 skirts &amp;lt;-</description>
    </item>
    
    <item>
      <title>R基础知识（二）</title>
      <link>/cn/post/r%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E4%BA%8C/</link>
      <pubDate>Mon, 03 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/r%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E4%BA%8C/</guid>
      <description>基础操作 #把1,2,...,100这个整数向量赋值到X X &amp;lt;- 1:100 #同上，只不过显示出来 (X &amp;lt;- 1:100) ## [1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ## [19] 19 20 21 22</description>
    </item>
    
    <item>
      <title>R基础知识（一）</title>
      <link>/cn/post/r%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E4%B8%80/</link>
      <pubDate>Sun, 02 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/r%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E4%B8%80/</guid>
      <description>ls()函数可以查看所有的对象列表 rm()函数可以用来去除对象 rm(list = ls())消除所有的对象 pdf()函数去创建一个pdf文件 jpeg()函数</description>
    </item>
    
    <item>
      <title>R线性回归</title>
      <link>/cn/post/r%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</link>
      <pubDate>Sat, 01 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/r%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</guid>
      <description>线性回归 MASS库中包含Boston(波士顿房价)数据集，它记录了波士顿周围506个街区的medv(房价中位数)。我们将设法用13个预测变量</description>
    </item>
    
    <item>
      <title>R时间序列挖掘</title>
      <link>/cn/post/r%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E6%8C%96%E6%8E%98/</link>
      <pubDate>Wed, 14 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/r%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E6%8C%96%E6%8E%98/</guid>
      <description>创建时间序列数据 一个时间序列是一个带有时间索引的随机变量序列，在R中，我们可以使用ts()函数从给定的向量或者矩阵中创建时间序列数据。 首先，</description>
    </item>
    
    <item>
      <title>R无监督机器学习</title>
      <link>/cn/post/r%E6%9C%89%E7%9B%91%E7%9D%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/r%E6%9C%89%E7%9B%91%E7%9D%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</guid>
      <description>大多数情况下，非监督式学习关注两个方面：聚类和降维。聚类是把相似数据(距离相近)分到一个组(簇)的方法。聚类分析不使用任何标签信息，但是会使</description>
    </item>
    
    <item>
      <title>R规则和模式挖掘</title>
      <link>/cn/post/r%E8%A7%84%E5%88%99%E5%92%8C%E6%A8%A1%E5%BC%8F%E6%8C%96%E6%8E%98/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/r%E8%A7%84%E5%88%99%E5%92%8C%E6%A8%A1%E5%BC%8F%E6%8C%96%E6%8E%98/</guid>
      <description>本节中我们会介绍创建和观察事务数据集，使用Apriori算法执行关联分析，使用多种图形模式可视化关联关系，以及使用Eclat算法找出频繁项集</description>
    </item>
    
    <item>
      <title>R中的统计推断</title>
      <link>/cn/post/r%E4%B8%AD%E7%9A%84%E7%BB%9F%E8%AE%A1%E6%8E%A8%E6%96%AD/</link>
      <pubDate>Mon, 29 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/r%E4%B8%AD%E7%9A%84%E7%BB%9F%E8%AE%A1%E6%8E%A8%E6%96%AD/</guid>
      <description>获取置信区间 首先使用函数rnorm生成一个正态分布： set.seed(123) population &amp;lt;- rnorm(1000, mean = 10, sd = 3) dens &amp;lt;- density(population) plot(dens, col = &amp;quot;red&amp;quot;, main = &amp;quot;A density plot of normal distribution&amp;quot;) 然后我们从全量数据中采取100个样本：</description>
    </item>
    
    <item>
      <title>统计概率分布模拟</title>
      <link>/cn/post/%E7%BB%9F%E8%AE%A1%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E6%A8%A1%E6%8B%9F/</link>
      <pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/%E7%BB%9F%E8%AE%A1%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E6%A8%A1%E6%8B%9F/</guid>
      <description>生成随机样本 生成从1到10的随机样本： sample(10) ## [1] 4 5 1 10 8 9 7 6 2 3 如果需要再次生成同样样本，可以首先设置随机种子： set.seed(123) sample(10) ## [1] 3 10 2 8 6 9 1 7 5 4</description>
    </item>
    
    <item>
      <title>ggplot2数据可视化（一）</title>
      <link>/cn/post/ggplot2%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/</link>
      <pubDate>Sun, 21 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/ggplot2%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/</guid>
      <description>使用ggplot2创建基础图形 library(ggplot2) library(lattice) library(dplyr) ## ## 载入程辑包：&amp;#39;dplyr&amp;#39; ## The following objects are masked from &amp;#39;package:stats&amp;#39;: ## ## filter, lag ## The following objects are masked from &amp;#39;package:base&amp;#39;: ## ## intersect, setdiff, setequal, union 读入数</description>
    </item>
    
    <item>
      <title> Log Normal &amp; Weibull Distribution</title>
      <link>/cn/post/log-normal-weibull-distribution/</link>
      <pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/log-normal-weibull-distribution/</guid>
      <description>Lognormal Distribution\(p.d.f:\)\[f_x(x)=\frac{1}{x}\cdot \frac{1}{\sigma \sqrt{2\pi}}e^{-\frac{(lnx-\mu)}{2\sigma^2}}\]
where: \(-\infty&amp;lt;\mu&amp;lt;\infty\), \(\sigma^2&amp;gt;0\)
Lognormal &amp;lt;- function(mu, sigmapower2){if (mu &amp;lt; 1 &amp;amp; sigmapower2 &amp;gt; 0)return(curve((1/sqrt(2*pi*sigmapower2))*exp(-0.5*(log(x)-mu)^2/sigmapower2)/x,ylab = &amp;quot;f(x)&amp;quot;, xlim = c(0, 5)))if (mu &amp;gt;= 1)return(curve((1/sqrt(2*pi*sigmapower2))*exp(-0.5*(log(x)-mu)^2/sigmapower2)/x,ylab = &amp;quot;f(x)&amp;quot;, xlim = c(0, 10)))elseprint(&amp;quot;You have a false parameter input&amp;quot;)}Lognormal(0, 1)Lognormal(1.5, 0.5)Lognormal(0, -1)## [1] &amp;quot;You have a false parameter input&amp;quot;
Weibull distribution\(p.</description>
    </item>
    
    <item>
      <title>朴素贝叶斯算法过滤手机垃圾短信</title>
      <link>/cn/post/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%AE%97%E6%B3%95%E8%BF%87%E6%BB%A4%E6%89%8B%E6%9C%BA%E5%9E%83%E5%9C%BE%E7%9F%AD%E4%BF%A1/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%AE%97%E6%B3%95%E8%BF%87%E6%BB%A4%E6%89%8B%E6%9C%BA%E5%9E%83%E5%9C%BE%E7%9F%AD%E4%BF%A1/</guid>
      <description>收集数据 我们将使用从网站http://www.dt.fee.unicamp.br/~tiago/smsspamcollection/ 搜集的垃</description>
    </item>
    
    <item>
      <title>决策树算法识别高风险银行贷款</title>
      <link>/cn/post/%E5%86%B3%E7%AD%96%E6%A0%91%E7%AE%97%E6%B3%95%E8%AF%86%E5%88%AB%E9%AB%98%E9%A3%8E%E9%99%A9%E9%93%B6%E8%A1%8C%E8%B4%B7%E6%AC%BE/</link>
      <pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/%E5%86%B3%E7%AD%96%E6%A0%91%E7%AE%97%E6%B3%95%E8%AF%86%E5%88%AB%E9%AB%98%E9%A3%8E%E9%99%A9%E9%93%B6%E8%A1%8C%E8%B4%B7%E6%AC%BE/</guid>
      <description>数据收集 数据集来自UCI机器学习数据仓库，这些数据表示从德国的一个信贷机构获得的贷款，数据由汉堡大学的Hans Hofman捐赠。该信贷数据集</description>
    </item>
    
    <item>
      <title>正态分布拟合检验</title>
      <link>/cn/post/%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83%E6%8B%9F%E5%90%88%E6%A3%80%E9%AA%8C/</link>
      <pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83%E6%8B%9F%E5%90%88%E6%A3%80%E9%AA%8C/</guid>
      <description>根据\(Lindburg-Levy\space Central\space Limit \space Theorem\)很容易证明：如果 \(X_1,X_2,\cdots ,X_{12}\)都是在[0,1)上服从均匀分布的\</description>
    </item>
    
    <item>
      <title>R多元数据作图</title>
      <link>/cn/post/%E5%A4%9A%E5%85%83%E6%95%B0%E6%8D%AEr%E4%BD%9C%E5%9B%BE/</link>
      <pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/%E5%A4%9A%E5%85%83%E6%95%B0%E6%8D%AEr%E4%BD%9C%E5%9B%BE/</guid>
      <description>均值条图 data &amp;lt;- read.table(&amp;quot;clipboard&amp;quot;, header = TRUE) barplot(apply(data, 1, mean), las = 2) #按行作均值条形图，las设置轴标签方向 barplot(apply(data, 2, mean)) #按列作均值条形图 barplot(apply(data[2:8], 2, mean)) #去掉第一列后的数据按列作均值条形图 barplot(apply(data,</description>
    </item>
    
    <item>
      <title>R矩阵运算</title>
      <link>/cn/post/r%E7%9F%A9%E9%98%B5%E8%BF%90%E7%AE%97/</link>
      <pubDate>Thu, 04 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/r%E7%9F%A9%E9%98%B5%E8%BF%90%E7%AE%97/</guid>
      <description>数学公式 对于\(p\)维数据，设\(X=(x_1,x_2,\cdots,x_p)\)是\(n\times p\)随机向量。 期望计算公式: 若\(</description>
    </item>
    
    <item>
      <title>R作时序图</title>
      <link>/cn/post/20180930/</link>
      <pubDate>Sun, 30 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/20180930/</guid>
      <description>今天晚上的时间序列分析课上，当我看到演示PPT上的几幅时间序列图像的时候，顿时心血来潮，于是我随手选择了一个名为milk.txt的纯文本文件</description>
    </item>
    
    <item>
      <title>大篷车保险数据KNN分类</title>
      <link>/cn/post/%E5%A4%A7%E7%AF%B7%E8%BD%A6%E4%BF%9D%E9%99%A9%E6%95%B0%E6%8D%AEknn%E5%88%86%E7%B1%BB/</link>
      <pubDate>Fri, 28 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/cn/post/%E5%A4%A7%E7%AF%B7%E8%BD%A6%E4%BF%9D%E9%99%A9%E6%95%B0%E6%8D%AEknn%E5%88%86%E7%B1%BB/</guid>
      <description>这个案例，来自 An Introduction to Statistical Learning with Applications in R 的第四章。 我们对ISLR library中的Caravan(大篷车)数据集运用KNN方法进行分类： library(ISLR) library(class) # contains knn() dim(Caravan)</description>
    </item>
    
  </channel>
</rss>
