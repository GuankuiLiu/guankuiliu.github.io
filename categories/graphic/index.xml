<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graphic on Guankui Liu | Boylad</title>
    <link>https://shixiangwang.github.io/home/categories/graphic/</link>
    <description>Recent content in Graphic on Guankui Liu | Boylad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://shixiangwang.github.io/home/categories/graphic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Matplotlib作图</title>
      <link>https://shixiangwang.github.io/home/cn/post/matplotlib_graph-01/</link>
      <pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shixiangwang.github.io/home/cn/post/matplotlib_graph-01/</guid>
      <description>import numpy as np import matplotlib.pyplot as plt plt.figure(figsize=(5, 3), dpi=80) X = np.linspace(-np.pi, np.pi, 256, endpoint=True) C,S = np.cos(X), np.sin(X) plt.xlim(X.min()*1.2, X.max()*1.1) plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi], [r&amp;#39;$-\pi$&amp;#39;, r&amp;#39;$-\pi/2$&amp;#39;, r&amp;#39;$0$&amp;#39;, r&amp;#39;$\pi/2$&amp;#39;, r&amp;#39;$\pi$&amp;#39;]) plt.ylim(C.min()*1.1, C.max()*1.1) plt.yticks([-1, 0, 1], [r&amp;#39;$-1$&amp;#39;, r&amp;#39;$0$&amp;#39;, r&amp;#39;$+1$&amp;#39;]) plt.plot(X, C, color=&amp;#39;blue&amp;#39;, linewidth=2.5, linestyle=&amp;#39;-&amp;#39;) plt.plot(X, S, color=&amp;#39;red&amp;#39;, linewidth=2.5, linestyle=&amp;#39;-.&amp;#39;) plt.show() plt.figure(figsize=(8, 5), dpi=80) ax = plt.subplot(111) ax.spines[&amp;#39;right&amp;#39;].set_color(&amp;#39;none&amp;#39;) ax.spines[&amp;#39;top&amp;#39;].set_color(&amp;#39;none&amp;#39;) ax.xaxis.set_ticks_position(&amp;#39;bottom&amp;#39;) ax.spines[&amp;#39;bottom&amp;#39;].set_position((&amp;#39;data&amp;#39;, 0)) # 位置：数据空</description>
    </item>
    
    <item>
      <title>R基础知识（一）</title>
      <link>https://shixiangwang.github.io/home/cn/post/r%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E4%B8%80/</link>
      <pubDate>Sun, 02 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shixiangwang.github.io/home/cn/post/r%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E4%B8%80/</guid>
      <description>ls()函数可以查看所有的对象列表 rm()函数可以用来去除对象 rm(list = ls())消除所有的对象 pdf()函数去创建一个pdf文件 jpeg()函数</description>
    </item>
    
    <item>
      <title>统计概率分布模拟</title>
      <link>https://shixiangwang.github.io/home/cn/post/%E7%BB%9F%E8%AE%A1%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E6%A8%A1%E6%8B%9F/</link>
      <pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shixiangwang.github.io/home/cn/post/%E7%BB%9F%E8%AE%A1%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E6%A8%A1%E6%8B%9F/</guid>
      <description>生成随机样本 生成从1到10的随机样本： sample(10) ## [1] 4 5 1 10 8 9 7 6 2 3 如果需要再次生成同样样本，可以首先设置随机种子： set.seed(123) sample(10) ## [1] 3 10 2 8 6 9 1 7 5 4</description>
    </item>
    
    <item>
      <title>ggplot2数据可视化（一）</title>
      <link>https://shixiangwang.github.io/home/cn/post/ggplot2%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/</link>
      <pubDate>Sun, 21 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shixiangwang.github.io/home/cn/post/ggplot2%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-1/</guid>
      <description>使用ggplot2创建基础图形 library(ggplot2) library(lattice) library(dplyr) ## ## 载入程辑包：&amp;#39;dplyr&amp;#39; ## The following objects are masked from &amp;#39;package:stats&amp;#39;: ## ## filter, lag ## The following objects are masked from &amp;#39;package:base&amp;#39;: ## ## intersect, setdiff, setequal, union 读入数</description>
    </item>
    
    <item>
      <title> Log Normal &amp; Weibull Distribution</title>
      <link>https://shixiangwang.github.io/home/cn/post/log-normal-weibull-distribution/</link>
      <pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shixiangwang.github.io/home/cn/post/log-normal-weibull-distribution/</guid>
      <description>Lognormal Distribution\(p.d.f:\)\[f_x(x)=\frac{1}{x}\cdot \frac{1}{\sigma \sqrt{2\pi}}e^{-\frac{(lnx-\mu)}{2\sigma^2}}\]
where: \(-\infty&amp;lt;\mu&amp;lt;\infty\), \(\sigma^2&amp;gt;0\)
Lognormal &amp;lt;- function(mu, sigmapower2){if (mu &amp;lt; 1 &amp;amp; sigmapower2 &amp;gt; 0)return(curve((1/sqrt(2*pi*sigmapower2))*exp(-0.5*(log(x)-mu)^2/sigmapower2)/x,ylab = &amp;quot;f(x)&amp;quot;, xlim = c(0, 5)))if (mu &amp;gt;= 1)return(curve((1/sqrt(2*pi*sigmapower2))*exp(-0.5*(log(x)-mu)^2/sigmapower2)/x,ylab = &amp;quot;f(x)&amp;quot;, xlim = c(0, 10)))elseprint(&amp;quot;You have a false parameter input&amp;quot;)}Lognormal(0, 1)Lognormal(1.5, 0.5)Lognormal(0, -1)## [1] &amp;quot;You have a false parameter input&amp;quot;
Weibull distribution\(p.</description>
    </item>
    
    <item>
      <title>R多元数据作图</title>
      <link>https://shixiangwang.github.io/home/cn/post/%E5%A4%9A%E5%85%83%E6%95%B0%E6%8D%AEr%E4%BD%9C%E5%9B%BE/</link>
      <pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shixiangwang.github.io/home/cn/post/%E5%A4%9A%E5%85%83%E6%95%B0%E6%8D%AEr%E4%BD%9C%E5%9B%BE/</guid>
      <description>均值条图 data &amp;lt;- read.table(&amp;quot;clipboard&amp;quot;, header = TRUE) barplot(apply(data, 1, mean), las = 2) #按行作均值条形图，las设置轴标签方向 barplot(apply(data, 2, mean)) #按列作均值条形图 barplot(apply(data[2:8], 2, mean)) #去掉第一列后的数据按列作均值条形图 barplot(apply(data,</description>
    </item>
    
    <item>
      <title>R作时序图</title>
      <link>https://shixiangwang.github.io/home/cn/post/20180930/</link>
      <pubDate>Sun, 30 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shixiangwang.github.io/home/cn/post/20180930/</guid>
      <description>今天晚上的时间序列分析课上，当我看到演示PPT上的几幅时间序列图像的时候，顿时心血来潮，于是我随手选择了一个名为milk.txt的纯文本文件</description>
    </item>
    
  </channel>
</rss>
